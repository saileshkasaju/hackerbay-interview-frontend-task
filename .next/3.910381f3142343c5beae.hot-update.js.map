{"version":3,"sources":["webpack:///./components/Game.js?cc82"],"names":["Game","props","finishGame","gameState","matrix","width","height","h","row","w","push","flatMatrix","_","flatten","totalEnemies","Math","ceil","activeCells","sampleSize","inactiveCells","map","eachCell","state","gameStatus","totalSteps","gameScore","activeCellsCount","console","log","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;IAEMA,I;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,4GACXA,KADW;;AAAA,UA2BnBC,UA3BmB,GA2BN,UAACC,SAAD,EAAe;AAC1B;AACA;AACD,KA9BkB;;AAEjB,UAAKC,MAAL,GAAc,EAAd;AAFiB,QAGTC,KAHS,GAGSJ,KAHT,CAGTI,KAHS;AAAA,QAGFC,MAHE,GAGSL,KAHT,CAGFK,MAHE;;AAIjB,SAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAID,MAApB,EAA4BC,GAA5B,EAAiC;AAC/B,UAAIC,MAAM,EAAV;AACA,WAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,KAApB,EAA2BI,GAA3B,EAAgC;AAC9BD,YAAIE,IAAJ,CAAYH,CAAZ,SAAiBE,CAAjB;AACD;AACD,YAAKL,MAAL,CAAYM,IAAZ,CAAiBF,GAAjB;AACD;AACD,QAAMG,aAAa,8CAAAC,CAAEC,OAAF,CAAU,MAAKT,MAAf,CAAnB;AACA,QAAMU,eAAeC,KAAKC,IAAL,CAAYX,QAAQC,MAAT,IAAoBD,QAAQC,MAA5B,CAAD,GAAuC,CAAjD,CAArB;AACA,UAAKW,WAAL,GAAmB,8CAAAL,CAAEM,UAAF,CAAaP,UAAb,EAAyBG,YAAzB,CAAnB;AACA,QAAMK,gBAAgBR,WAAWS,GAAX,CAAe,UAACC,QAAD,EAAc;AACjD,YAAKJ,WAAL;AACD,KAFqB,CAAtB;AAGA,UAAKK,KAAL,GAAa;AACXC,kBAAY,OADD;AAEXC,kBAAY,CAFD;AAGXC,iBAAW,CAHA;AAIXX;AAJW,KAAb;AAjBiB;AAuBlB;;;;2CACsB;AACrB,WAAKZ,UAAL;AACD;;;6BAKQ;AAAA,UACCC,SADD,GACe,KAAKmB,KADpB,CACCnB,SADD;AAAA,UAECuB,gBAFD,GAEsB,KAAKzB,KAF3B,CAECyB,gBAFD;;AAGPC,cAAQC,GAAR,CAAY,KAAKxB,MAAjB,EAAyB,KAAKa,WAA9B,EAA2CS,gBAA3C;AACA,aACE;AAAA;AAAA,UAAK,WAAU,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAKD;;;;;;;;;EAzCgB,6CAAAG,CAAMC,S;;eA4CV9B,I;;;AAAf;;;;;;;;;;;;0BA5CMA,I","file":"3.910381f3142343c5beae.hot-update.js","sourcesContent":["import _ from 'lodash';\n// import Row from './Row';\n// import Cell from './Cell';\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.matrix = [];\n    const { width, height } = props;\n    for (let h = 0; h < height; h++) {\n      let row = [];\n      for (let w = 0; w < width; w++) {\n        row.push(`${h}-${w}`);\n      }\n      this.matrix.push(row);\n    }\n    const flatMatrix = _.flatten(this.matrix);\n    const totalEnemies = Math.ceil(((width * height) / (width + height))* 2);\n    this.activeCells = _.sampleSize(flatMatrix, totalEnemies);\n    const inactiveCells = flatMatrix.map((eachCell) => {\n      this.activeCells\n    })\n    this.state = {\n      gameStatus: 'ready',\n      totalSteps: 0,\n      gameScore: 0,\n      totalEnemies,\n    }\n  }\n  componentWillUnmount() {\n    this.finishGame();\n  }\n  finishGame = (gameState) => {\n    // the game is over\n    // so set score and cleanup\n  }\n  render() {\n    const { gameState } = this.state;\n    const { activeCellsCount } = this.props;\n    console.log(this.matrix, this.activeCells, activeCellsCount);\n    return (\n      <div className=\"grid\">\n        This is the best game\n      </div>\n    );\n  }\n}\n\nexport default Game;\n\n\n\n// WEBPACK FOOTER //\n// ./components/Game.js"],"sourceRoot":""}